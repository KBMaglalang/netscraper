# --- Stage 1: Build ---
# Use an official Node runtime as a parent image
FROM node:18-alpine as builder

# Set the working directory in the container
WORKDIR /usr/src/app

# Install pnpm
RUN npm install -g pnpm

# Copy package.json and lock file
COPY package.json pnpm-lock.yaml* ./

# Install dependencies using pnpm
RUN pnpm install --frozen-lockfile

# Copy the rest of your app's source code from your host to your image filesystem.
COPY . .

# Build your app
RUN pnpm build

# --- Stage 2: Production Environment ---
FROM node:18-alpine

# Set the working directory in the container
WORKDIR /usr/src/app

# Install pnpm
RUN npm install -g pnpm

# Copy built assets from the builder stage
# COPY --from=builder /usr/src/app/.next ./.next
# COPY --from=builder /usr/src/app/node_modules ./node_modules
# COPY --from=builder /usr/src/app/package.json ./package.json
# COPY --from=builder /usr/src/app/public ./public
# If you are using the public folder
COPY --from=builder . .


# Expose the port the app runs on
EXPOSE 3000

# Start the app
CMD ["pnpm", "start"]